import { Pool } from 'pg';
import { config } from 'dotenv';

// Cargar variables de entorno
config();

// Configuraci√≥n condicional para desarrollo/producci√≥n
const poolConfig = process.env.DATABASE_URL 
  ? {
      // Configuraci√≥n para Railway (producci√≥n)
      connectionString: process.env.DATABASE_URL,
      ssl: {
        rejectUnauthorized: false
      }
    } 
  : {
      // Configuraci√≥n local (solo para desarrollo)
      host: 'hopper.proxy.rlwy.net',
      port: 48766,
      user: 'postgres',       // Cambiar seg√∫n tu configuraci√≥n local
      password: 'FfSTbRBsqEZKodCAREjPCPpAsLKTvaJh', // Cambiar seg√∫n tu configuraci√≥n local
      database: 'railway'   // Nombre de tu DB local
    };

// Crear el pool de conexiones
const pool = new Pool(poolConfig);

// Verificaci√≥n de conexi√≥n con manejo de errores detallado
pool.query('SELECT NOW()')
  .then(() => {
    console.log('‚úÖ Conexi√≥n a PostgreSQL exitosa');
    console.log(`üîó Conectado a: ${process.env.DATABASE_URL ? 'Railway' : 'Base de datos local'}`);
  })
  .catch(err => {
    console.error('‚ùå Error de conexi√≥n a PostgreSQL:');
    console.error('C√≥digo:', err.code);
    console.error('Direcci√≥n:', err.address || 'localhost (por defecto)');
    console.error('Puerto:', err.port || 5432);
    console.error('Mensaje:', err.message);
    
    // Sugerencias basadas en el error
    if (err.code === 'ECONNREFUSED') {
      console.log('\nüîß Posibles soluciones:');
      console.log('1. Verifica que PostgreSQL est√© corriendo localmente (si est√°s en desarrollo)');
      console.log('2. Revisa la variable DATABASE_URL en Railway (si est√°s en producci√≥n)');
      console.log('3. Comprueba que el puerto 5432 est√© accesible');
    }
  });

export default pool;